version: 2.1

jobs:
  # Build and push frontend image
  build_frontend:
    docker:
      - image: docker:20.10.8
    environment:
      DOCKER_IMAGE_BASE_URL: ghcr.io/furious-ducks-tiptop/frontend
    steps:
      - run: apk update
      - run: apk add git
      - checkout
      - setup_remote_docker
      - run:
          name: building frontend docker image
          command: |
             echo $CI_REGISTRY_TOKEN | docker login ghcr.io -u $CI_REGISTRY_USER --password-stdin
             cd frontend
             rm -rf .next
             docker build -t ghcr.io/furious-ducks-tiptop/frontend:latest -t ghcr.io/furious-ducks-tiptop/frontend:0.0.1 .
             docker push ghcr.io/furious-ducks-tiptop/frontend:latest

  # Build and push backend image
  build_backend:
    docker:
      - image: docker:20.10.8
    environment:
      DOCKER_IMAGE_BASE_URL: ghcr.io/furious-ducks-tiptop/backend
    steps:
      - run: apk update
      - run: apk add git
      - checkout
      - setup_remote_docker
      - run:
          name: building backend docker image
          command: |
             echo $CI_REGISTRY_TOKEN | docker login ghcr.io -u $CI_REGISTRY_USER --password-stdin
             cd backend
             docker build -t ghcr.io/furious-ducks-tiptop/backend:latest .
             docker push ghcr.io/furious-ducks-tiptop/backend:latest

  # Deploy to production environment
  deploy_production:
    docker:
      - image: ubuntu:latest
    steps:
      - run:
          name: prepare
          command: |
            apt update; apt install -y git curl zip unzip openssh-client openssh-server
      - checkout
      - run:
          name: deploy
          command: |
            ssh $VM_USER@$VM_IPADDRESS -p $VM_PORT "cd docker && docker-compose pull frontend && docker-compose pull backend && docker-compose up --force-recreate --no-deps -d frontend backend"
  

workflows:
  build_and_push:
    jobs:
      - build_frontend:
          context: context
          filters:
            tags:
              only: /^stable.*$/

      - build_backend:
          context: context
          filters:
            tags:
              only: /^stable.*$/

      - deploy_production:
          context: context
          filters:
            tags:
              only: /^stable.*$/
