version: 2.1

jobs:
  build_frontend:
    docker:
      - image: docker:20.10.8
    steps:
      - checkout
      - run:
          name: Login to GitHub Container Registry
          command: echo "$CI_REGISTRY_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
      - run:
          name: Building frontend Docker image
          command: |
             cd frontend
             docker build -t ghcr.io/furious-ducks-tiptop/frontend:latest .
             docker push ghcr.io/furious-ducks-tiptop/frontend:latest

  build_backend:
    docker:
      - image: docker:20.10.8
    steps:
      - checkout
      - run:
          name: Login to GitHub Container Registry
          command: echo "$CI_REGISTRY_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
      - run:
          name: Building backend Docker image
          command: |
             cd backend
             docker build -t ghcr.io/furious-ducks-tiptop/backend:latest .
             docker push ghcr.io/furious-ducks-tiptop/backend:latest

  deploy_production:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: Prepare
          command: |
            apt update; apt install -y git curl zip unzip openssh-client openssh-server
      - run:
          name: Deploy
          command: |
            ssh $VM_USER@$VM_IPADDRESS -p $VM_PASSWORD "cd docker ; docker-compose pull frontend; docker-compose pull backend; docker-compose up --force-recreate --no-deps -d frontend backend"

workflows:
  version: 2
  build_and_push:
    jobs:
      - build_frontend:
          context: context
          filters:
            tags:
              only: /^stable.*$/
      - build_backend:
          context: context
          filters:
            tags:
              only: /^stable.*$/
      - deploy_production:
          context: context
          filters:
            tags:
              only: /^stable.*$/
