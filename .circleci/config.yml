version: 2.1

jobs:
  # Build and push frontend image
  # build_frontend:
  #   docker:
  #     - image: docker:20.10.8
  #   environment:
  #     DOCKER_IMAGE_BASE_URL: ghcr.io/furious-ducks-tiptop/frontend
  #   steps:
  #     - run: apk update
  #     - run: apk add git
  #     - checkout
  #     - setup_remote_docker
  #     - run:
  #         name: building frontend docker image
  #         command: |
  #            echo $CI_REGISTRY_TOKEN | docker login ghcr.io -u $CI_REGISTRY_USER --password-stdin
  #            cd frontend
  #            rm -rf node_modules
  #            rm -rf .next
  #            docker build -t ghcr.io/furious-ducks-tiptop/frontend:latest -t ghcr.io/furious-ducks-tiptop/frontend:0.0.1 .
  #            docker push ghcr.io/furious-ducks-tiptop/frontend:latest

  # # Build and push backend image
  # build_backend:
  #   docker:
  #     - image: docker:20.10.8
  #   environment:
  #     DOCKER_IMAGE_BASE_URL: ghcr.io/furious-ducks-tiptop/backend
  #   steps:
  #     - run: apk update
  #     - run: apk add git
  #     - checkout
  #     - setup_remote_docker
  #     - run:
  #         name: building backend docker image
  #         command: |
  #            echo $CI_REGISTRY_TOKEN | docker login ghcr.io -u $CI_REGISTRY_USER --password-stdin
  #            cd backend
  #            docker build -t ghcr.io/furious-ducks-tiptop/backend:latest .
  #            docker push ghcr.io/furious-ducks-tiptop/backend:latest

  # Deploy to production environment
  deploy_production:
    docker:
      - image: almalinux:8.8
    steps:
      - run:
          name: prepare
          command: |
            rpm --import https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux
            yum update -y
            rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-AlmaLinux
            # Check repository configuration
            cat /etc/yum.repos.d/*.repo
            yum clean packages
            yum clean metadata
            yum makecache
            yum install -y git curl zip unzip openssh-clients openssh-server
      - checkout
      - add_ssh_keys
      - run:
          name: deploy
          command: |
            # Se connecter à votre serveur et déployer les conteneurs Docker
            ssh $VM_USER@$VM_IPADDRESS "cd docker && docker-compose pull frontend && docker-compose pull backend && docker-compose up --force-recreate --no-deps -d frontend backend"  

workflows:
  build_and_push:
    jobs:
      # - build_frontend:
      #     context: context
      #     filters:
      #       tags:
      #         only: /^stable.*$/

      # - build_backend:
      #     context: context
      #     filters:
      #       tags:
      #         only: /^stable.*$/

      - deploy_production:
          context: context
          # requires:
          #   - build_frontend
          #   - build_backend
          filters:
            tags:
              only: /^stable.*$/
