controllers:
    resource:
        path: ../src/Controller/
        namespace: App\Controller
    type: attribute


#authentification routes
api_login_check_client:
    path: /api/login_check_client
    controller: App\Controller\Api\User\UserAuthController::checkLoginClient

api_login_check_admin:
    path: /api/login_check_admin
    controller: App\Controller\Api\User\UserAuthController::checkLoginAdmin

oauth_google_callback:
    path: /api/oauth/google/callback
    controller: App\Controller\Api\User\UserSocialMediaAuthController::googleCallback

oauth_facebook_callback:
    path: /api/oauth/facebook/callback
    controller: App\Controller\Api\User\UserSocialMediaAuthController::facebookCallback


api_register:
    path: /api/register
    controller: App\Controller\Api\User\UserAuthController::register

logout:
    path: /api/logout
    controller: App\Controller\Api\User\UserAuthController::logout



#stores routes
get_stores_admin:
    path: /api/admin/stores
    controller: App\Controller\Api\Store\StoreController::getStoresForAdmin
    methods: GET

get_store_by_id:
    path: /api/store/{id}
    controller: App\Controller\Api\Store\StoreController::getStoreById
    methods: GET

admin_add_new_store:
    path: /api/admin/store/add
    controller: App\Controller\Api\Store\StoreController::addNewStoreByAdmin
    methods: POST

update_store_by_id:
    path: /api/admin/store/update/{id}
    controller: App\Controller\Api\Store\StoreController::updateStoreByIdForAdmin
    methods: POST

delete_store_by_id:
    path: /api/admin/store/delete/{id}
    controller: App\Controller\Api\Store\StoreController::deleteStoreById
    methods: DELETE


get_stores_for_client:
    path: /api/client/stores
    controller: App\Controller\Api\Store\StoreController::getStoresForClient
    methods: GET
    defaults:
        page: 1
        options:
            parameters:
                page:
                    name: page
                    in: query
                    required: false

associate_client_to_store:
    path: /api/client/store/associate
    controller: App\Controller\Api\Store\StoreController::associateClientToStore
    methods: POST

#store's users routes
get_store_users:
    path: /api/admin/store/{id}/users
    controller: App\Controller\Api\Store\StoreUserController::getStoreUsersForAdmin
    methods: GET

get_store_users_by_role:
    path: /api/store/{id}/users
    controller: App\Controller\Api\Store\StoreUserController::getStoreUsersByRole
    methods: POST

add_new_user_to_store:
    path: /api/store/{id}/user/add
    controller: App\Controller\Api\Store\StoreUserController::addNewUserToStore
    methods: POST

#getUserProdileById
get_user_profile_by_id:
    path: /api/user/{id}
    controller: App\Controller\Api\User\UserController::getUserProfileById
    methods: GET

#getUserPersonalInfoById
get_user_personal_info_by_id:
    path: /api/user/{id}/personal_info
    controller: App\Controller\Api\User\UserController::getUserPersonalInfoById
    methods: GET

#updateUserProfileById
update_user_profile_by_id:
    path: /api/user/{id}/update
    controller: App\Controller\Api\User\UserController::updateUserProfileById
    methods: POST

#getTickes
get_tickets:
    path: /api/tickets
    controller: App\Controller\Api\Ticket\TicketController::getTickets
    methods: GET|POST

#getTicketByCode
get_ticket_by_code:
    path: /api/ticket/{code}
    controller: App\Controller\Api\Ticket\TicketController::getTicketByCode
    methods: GET
    requirements:
        code: .+

#getAllPrizes
get_all_prizes:
    path: /api/prizes
    controller: App\Controller\Api\Prize\PrizeController::getAllPrizes
    methods: GET

#getClients
get_clients:
    path: /api/admin/clients
    controller: App\Controller\Api\User\UserController::getClients
    methods: GET


get_participants:
    path: /api/admin/participants
    controller: App\Controller\Api\User\UserController::getParticipants
    methods: GET

#tickets/check/play
check_ticket_play:
    path: /api/tickets/check/play
    controller: App\Controller\Api\Ticket\TicketController::checkTicketForPlay
    methods: POST


get_storemanager_store:
    path: /api/storemanager/{id}/store
    controller: App\Controller\Api\Store\StoreController::getStoreForStoreManager
    methods: GET
    requirements:
        id: \d+

#print_ticket by employee
print_ticket_by_employee:
    path: /api/print_ticket
    controller: App\Controller\Api\Ticket\TicketController::printTicketByEmployee
    methods: POST

#get_store_clients
get_store_clients:
    path: /api/store/{id}/clients
    controller: App\Controller\Api\User\UserController::getStoreClients
    methods: GET
    requirements:
        id: \d+

#confirm_ticket_play
confirm_ticket_play:
    path: /api/ticket/confirm/play
    controller: App\Controller\Api\Ticket\TicketController::confirmTicketPlay
    methods: POST


confirm_ticket_gain:
    path: /api/ticket/confirm/gain
    controller: App\Controller\Api\Ticket\TicketController::confirmTicketGain
    methods: POST



#employees_list
get_employees_list:
    path: /api/employees
    controller: App\Controller\Api\User\UserController::getEmployeesList
    methods: GET
    requirements:
        id: \d+

#winner_tickets
get_winner_tickets:
    path: /api/winner_tickets
    controller: App\Controller\Api\Ticket\TicketController::getWinnerTickets
    methods: GET

#winner_tickets_history
get_winner_tickets_history:
    path: /api/winner_tickets/history
    controller: App\Controller\Api\Ticket\TicketController::getWinnerTicketsHistory
    methods: GET


#client_dashboard_counters
get_client_dashboard_counters:
    path: /api/client/dashboard/counters
    controller: App\Controller\Api\Dashboard\DashboardController::getClientDashboardCounters
    methods: GET


#admin_dashboard_counters
get_admin_dashboard_counters:
    path: /api/admin/dashboard/counters
    controller: App\Controller\Api\Dashboard\DashboardController::getAdminDashboardCounters
    methods: POST

#dashaboardStats
get_dashboard_stats:
    path: /api/dashboard/stats
    controller: App\Controller\Api\Dashboard\DashboardController::getDashboardStats
    methods: GET


#EmailTemplates
get_email_templates:
    path: /api/admin/correspondence_templates
    controller: App\Controller\Api\EmailTemplate\EmailTemplateController::getEmailTemplates
    methods: GET

create_email_template:
    path: /api/admin/correspondence_template/create
    controller: App\Controller\Api\EmailTemplate\EmailTemplateController::createEmailTemplate
    methods: POST

get_email_template_by_id:
    path: /api/admin/correspondence_template/{id}
    controller: App\Controller\Api\EmailTemplate\EmailTemplateController::getEmailTemplateById
    methods: GET
    requirements:
        id: \d+

update_email_template_by_id:
    path: /api/admin/correspondence_template/{id}/update
    controller: App\Controller\Api\EmailTemplate\EmailTemplateController::updateEmailTemplateById
    methods: POST
    requirements:
        id: \d+

#EmailServices
get_email_services:
    path: /api/admin/correspondence_services
    controller: App\Controller\Api\EmailService\EmailServiceController::getEmailServices
    methods: GET


#EmailTemplateVariables
get_email_template_variables:
    path: /api/admin/correspondence_services/variables
    controller: App\Controller\Api\EmailTemplateVariable\EmailTemplateVariableController::getEmailTemplateVariables
    methods: GET

#EmailTemplateVariables

get_email_template_variables_by_service:
    path: /api/admin/correspondence_services/services/variables
    controller: App\Controller\Api\EmailTemplateVariable\EmailTemplateVariableController::getEmailTemplateVariablesByService
    methods: GET


#PostManMailer
send_email:
    path: /api/admin/correspondence_services/send_email
    controller: App\Controller\Api\PostManMailer\PostManMailerController::sendEmail
    methods: POST

#send_activation_email
send_activation_email:
    path: /api/user/{id}/send_activation_email
    controller: App\Controller\Api\PostManMailer\PostManMailerController::sendActivationEmail
    methods: POST
    requirements:
        id: \d+

check_client_activation_token_validity:
    path: /api/client/check_activation_token_validity
    controller: App\Controller\Api\PostManMailer\PostManMailerController::checkClientActivationTokenValidity
    methods: POST